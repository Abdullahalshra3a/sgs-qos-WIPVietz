% This file is autogenerated by the class "MinizincAdapter.py"
set of int: adj_x; 
set of int: adj_y; 
set of int: QoS; %bitrate, latency 
set of int: dim_server_res; 
set of int: num_servers; 

array[adj_x, adj_y] of int: target; 
array[num_servers, dim_server_res] of int: server_resources; 

array[QoS] of float: QoS_SE; 
set of int: num_options_SE; 
set of int: SC_SE_br_factor; 
array[num_options_SE, adj_x, adj_y] of int: SC_SE_br; 
array[num_options_SE] of int: SC_SE_lat; 
array[num_options_SE, num_servers, dim_server_res] of float: SC_SE_serv; 

array[QoS] of float: QoS_VPP; 
set of int: num_options_VPP; 
set of int: SC_VPP_br_factor; 
array[num_options_VPP, adj_x, adj_y] of int: SC_VPP_br; 
array[num_options_VPP] of int: SC_VPP_lat; 
array[num_options_VPP, num_servers, dim_server_res] of float: SC_VPP_serv; 

array[QoS] of float: QoS_AR; 
set of int: num_options_AR; 
set of int: SC_AR_br_factor; 
array[num_options_AR, adj_x, adj_y] of int: SC_AR_br; 
array[num_options_AR] of int: SC_AR_lat; 
array[num_options_AR, num_servers, dim_server_res] of float: SC_AR_serv; 

array[QoS] of float: QoS_LM; 
set of int: num_options_LM; 
set of int: SC_LM_br_factor; 
array[num_options_LM, adj_x, adj_y] of int: SC_LM_br; 
array[num_options_LM] of int: SC_LM_lat; 
array[num_options_LM, num_servers, dim_server_res] of float: SC_LM_serv; 

array[QoS] of float: QoS_CVC; 
set of int: num_options_CVC; 
set of int: SC_CVC_br_factor; 
array[num_options_CVC, adj_x, adj_y] of int: SC_CVC_br; 
array[num_options_CVC] of int: SC_CVC_lat; 
array[num_options_CVC, num_servers, dim_server_res] of float: SC_CVC_serv; 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Define decision variables.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
var num_options_SE: x_se_S1_F11; 
var num_options_SE: x_se_S1_F15; 
var num_options_SE: x_se_S1_F31; 
var num_options_SE: x_se_S1_F33; 
var num_options_SE: x_se_S1_F23; 
var num_options_SE: x_se_S1_F24; 
var num_options_VPP: x_vpp_F35_F21; 
var num_options_VPP: x_vpp_F14_F21; 
var num_options_VPP: x_vpp_F21_F13; 
var num_options_VPP: x_vpp_F14_F13; 
var num_options_VPP: x_vpp_F35_F13; 
var num_options_VPP: x_vpp_F35_F14; 
var num_options_AR: x_ar_S2_F26; 
var num_options_LM: x_lm_S2_F12; 
var num_options_LM: x_lm_S2_F34; 
var num_options_LM: x_lm_S2_F22; 
var num_options_CVC: x_cvc_S1_F16; 
var num_options_CVC: x_cvc_S1_F32; 
var num_options_CVC: x_cvc_S1_F25; 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Define QoS variables.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
var SC_SE_br_factor: x_se_br_factor; 
var SC_VPP_br_factor: x_vpp_br_factor; 
var SC_AR_br_factor: x_ar_br_factor; 
var SC_LM_br_factor: x_lm_br_factor; 
var SC_CVC_br_factor: x_cvc_br_factor; 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Define connection exist constraint.
% This constraint enforces that the final connection between the path and the field device or the server exists.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

constraint (SC_SE_br[x_se_S1_F11, 5, 3] > 0); 
constraint (SC_SE_br[x_se_S1_F11, 6, 3] > 0); 
constraint (SC_SE_br[x_se_S1_F15, 5, 3] > 0); 
constraint (SC_SE_br[x_se_S1_F15, 10, 2] > 0); 
constraint (SC_SE_br[x_se_S1_F31, 5, 3] > 0); 
constraint (SC_SE_br[x_se_S1_F31, 15, 14] > 0); 
constraint (SC_SE_br[x_se_S1_F33, 5, 3] > 0); 
constraint (SC_SE_br[x_se_S1_F33, 17, 13] > 0); 
constraint (SC_SE_br[x_se_S1_F23, 5, 3] > 0); 
constraint (SC_SE_br[x_se_S1_F23, 28, 24] > 0); 
constraint (SC_SE_br[x_se_S1_F24, 5, 3] > 0); 
constraint (SC_SE_br[x_se_S1_F24, 29, 24] > 0); 

constraint (SC_VPP_br[x_vpp_F35_F21, 19, 13] > 0); 
constraint (SC_VPP_br[x_vpp_F35_F21, 26, 22] > 0); 
constraint (SC_VPP_br[x_vpp_F14_F21, 9, 4] > 0); 
constraint (SC_VPP_br[x_vpp_F14_F21, 26, 22] > 0); 
constraint (SC_VPP_br[x_vpp_F21_F13, 26, 22] > 0); 
constraint (SC_VPP_br[x_vpp_F21_F13, 8, 4] > 0); 
constraint (SC_VPP_br[x_vpp_F14_F13, 9, 4] > 0); 
constraint (SC_VPP_br[x_vpp_F14_F13, 8, 4] > 0); 
constraint (SC_VPP_br[x_vpp_F35_F13, 19, 13] > 0); 
constraint (SC_VPP_br[x_vpp_F35_F13, 8, 4] > 0); 
constraint (SC_VPP_br[x_vpp_F35_F14, 19, 13] > 0); 
constraint (SC_VPP_br[x_vpp_F35_F14, 9, 4] > 0); 

constraint (SC_AR_br[x_ar_S2_F26, 25, 21] > 0); 
constraint (SC_AR_br[x_ar_S2_F26, 31, 23] > 0); 

constraint (SC_LM_br[x_lm_S2_F12, 25, 21] > 0); 
constraint (SC_LM_br[x_lm_S2_F12, 7, 4] > 0); 
constraint (SC_LM_br[x_lm_S2_F34, 25, 21] > 0); 
constraint (SC_LM_br[x_lm_S2_F34, 18, 13] > 0); 
constraint (SC_LM_br[x_lm_S2_F22, 25, 21] > 0); 
constraint (SC_LM_br[x_lm_S2_F22, 27, 22] > 0); 

constraint (SC_CVC_br[x_cvc_S1_F16, 5, 3] > 0); 
constraint (SC_CVC_br[x_cvc_S1_F16, 11, 2] > 0); 
constraint (SC_CVC_br[x_cvc_S1_F32, 5, 3] > 0); 
constraint (SC_CVC_br[x_cvc_S1_F32, 16, 14] > 0); 
constraint (SC_CVC_br[x_cvc_S1_F25, 5, 3] > 0); 
constraint (SC_CVC_br[x_cvc_S1_F25, 30, 24] > 0); 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Define latency constraints.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
constraint (SC_SE_lat[x_se_S1_F11] <= QoS_SE[2]); 
constraint (SC_SE_lat[x_se_S1_F15] <= QoS_SE[2]); 
constraint (SC_SE_lat[x_se_S1_F31] <= QoS_SE[2]); 
constraint (SC_SE_lat[x_se_S1_F33] <= QoS_SE[2]); 
constraint (SC_SE_lat[x_se_S1_F23] <= QoS_SE[2]); 
constraint (SC_SE_lat[x_se_S1_F24] <= QoS_SE[2]); 
constraint (SC_VPP_lat[x_vpp_F35_F21] <= QoS_VPP[2]); 
constraint (SC_VPP_lat[x_vpp_F14_F21] <= QoS_VPP[2]); 
constraint (SC_VPP_lat[x_vpp_F21_F13] <= QoS_VPP[2]); 
constraint (SC_VPP_lat[x_vpp_F14_F13] <= QoS_VPP[2]); 
constraint (SC_VPP_lat[x_vpp_F35_F13] <= QoS_VPP[2]); 
constraint (SC_VPP_lat[x_vpp_F35_F14] <= QoS_VPP[2]); 
constraint (SC_AR_lat[x_ar_S2_F26] <= QoS_AR[2]); 
constraint (SC_LM_lat[x_lm_S2_F12] <= QoS_LM[2]); 
constraint (SC_LM_lat[x_lm_S2_F34] <= QoS_LM[2]); 
constraint (SC_LM_lat[x_lm_S2_F22] <= QoS_LM[2]); 
constraint (SC_CVC_lat[x_cvc_S1_F16] <= QoS_CVC[2]); 
constraint (SC_CVC_lat[x_cvc_S1_F32] <= QoS_CVC[2]); 
constraint (SC_CVC_lat[x_cvc_S1_F25] <= QoS_CVC[2]); 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Define hard SGS bitrate QoS constraint.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
constraint (x_se_br_factor >= QoS_SE[1]); 
constraint (x_vpp_br_factor >= QoS_VPP[1]); 
constraint (x_ar_br_factor >= QoS_AR[1]); 
constraint (x_lm_br_factor >= QoS_LM[1]); 
constraint (x_cvc_br_factor >= QoS_CVC[1]); 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Define physical bitrate constraint.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
constraint forall(i in adj_x, j in adj_y)(SC_SE_br[x_se_S1_F11, i, j] * x_se_br_factor  + SC_SE_br[x_se_S1_F15, i, j] * x_se_br_factor  + SC_SE_br[x_se_S1_F31, i, j] * x_se_br_factor  + SC_SE_br[x_se_S1_F33, i, j] * x_se_br_factor  + SC_SE_br[x_se_S1_F23, i, j] * x_se_br_factor  + SC_SE_br[x_se_S1_F24, i, j] * x_se_br_factor  + SC_VPP_br[x_vpp_F35_F21, i, j] * x_vpp_br_factor  + SC_VPP_br[x_vpp_F14_F21, i, j] * x_vpp_br_factor  + SC_VPP_br[x_vpp_F21_F13, i, j] * x_vpp_br_factor  + SC_VPP_br[x_vpp_F14_F13, i, j] * x_vpp_br_factor  + SC_VPP_br[x_vpp_F35_F13, i, j] * x_vpp_br_factor  + SC_VPP_br[x_vpp_F35_F14, i, j] * x_vpp_br_factor  + SC_AR_br[x_ar_S2_F26, i, j] * x_ar_br_factor  + SC_LM_br[x_lm_S2_F12, i, j] * x_lm_br_factor  + SC_LM_br[x_lm_S2_F34, i, j] * x_lm_br_factor  + SC_LM_br[x_lm_S2_F22, i, j] * x_lm_br_factor  + SC_CVC_br[x_cvc_S1_F16, i, j] * x_cvc_br_factor  + SC_CVC_br[x_cvc_S1_F32, i, j] * x_cvc_br_factor  + SC_CVC_br[x_cvc_S1_F25, i, j] * x_cvc_br_factor   <= target[i, j]); 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Define server constraints.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
constraint forall(k in num_servers, j in dim_server_res)(SC_SE_serv[x_se_S1_F11, k, j] + SC_SE_serv[x_se_S1_F15, k, j] + SC_SE_serv[x_se_S1_F31, k, j] + SC_SE_serv[x_se_S1_F33, k, j] + SC_SE_serv[x_se_S1_F23, k, j] + SC_SE_serv[x_se_S1_F24, k, j] + SC_VPP_serv[x_vpp_F35_F21, k, j] + SC_VPP_serv[x_vpp_F14_F21, k, j] + SC_VPP_serv[x_vpp_F21_F13, k, j] + SC_VPP_serv[x_vpp_F14_F13, k, j] + SC_VPP_serv[x_vpp_F35_F13, k, j] + SC_VPP_serv[x_vpp_F35_F14, k, j] + SC_AR_serv[x_ar_S2_F26, k, j] + SC_LM_serv[x_lm_S2_F12, k, j] + SC_LM_serv[x_lm_S2_F34, k, j] + SC_LM_serv[x_lm_S2_F22, k, j] + SC_CVC_serv[x_cvc_S1_F16, k, j] + SC_CVC_serv[x_cvc_S1_F32, k, j] + SC_CVC_serv[x_cvc_S1_F25, k, j]  <= server_resources[k, j]); 

solve satisfy;